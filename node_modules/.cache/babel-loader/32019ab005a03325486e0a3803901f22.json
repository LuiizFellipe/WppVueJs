{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport io from 'socket.io-client';\nconst server_socket = 'https://whatsapp-free01.wppserver.com';\nconst socket = io(`${server_socket}`, {\n  transportOptions: {\n    polling: {\n      extraHeaders: {\n        'Authorization': 'Bearer abc'\n      }\n    }\n  }\n});\nconst serverAPI = 'https://whatsapp-free01.wppserver.com/api';\nconst session = 'Samsung';\nconst secretkey = 'LIzBSyCmNVzwt2ErKgtnZgLZ';\nexport default {\n  data() {\n    return {\n      teste: 'Conectar',\n      tokenwhats: 'teste',\n      imagem: 'https://i.imgur.com/QmsHgri.png',\n      sessao: '',\n      qrcoderen: 'gerar2'\n    };\n  },\n\n  watch: {\n    checkSession() {}\n\n  },\n  methods: {\n    async getToken() {\n      this.teste = 'Conectando..';\n      axios({\n        method: 'POST',\n        url: serverAPI + '/' + session + '/' + secretkey + '/generate-token'\n      }).then(WppToken => {\n        console.log(WppToken);\n        this.startSession(WppToken.data.token);\n        this.qrcoderen = WppToken.data.token;\n        this.sessao = WppToken.data.token;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    async startSession(WppToken) {\n      axios({\n        method: 'POST',\n        url: serverAPI + '/' + session + '/start-session',\n        responseType: 'stream',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + WppToken\n        },\n        data: {\n          \"webhook\": \"https://webhook.site/7cc2944d-3967-4cea-988c-d57ea80bce5f\"\n        }\n      }).then(conectado => {\n        switch (conectado.data?.status) {\n          case 'CONNECTED':\n            this.teste = 'Conectado ao servidor';\n            break;\n\n          default:\n            this.teste = 'Não foi possivel conectar';\n            break;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    async getQrCode() {\n      socket.on('qrCode', qrCode => {\n        console.log(qrCode);\n        this.imagem = qrCode.data;\n      });\n      socket.on('session-logged', session => {\n        console.log(session);\n\n        if (session?.status == true) {\n          alert('Sucesso no check');\n        }\n      });\n    },\n\n    async closeSession() {\n      axios({\n        method: 'POST',\n        url: serverAPI + '/' + session + '/close-session',\n        headers: {\n          'Authorization': 'Bearer ' + this.sessao\n        }\n      }).then(desconectado => {\n        console.log(desconectado);\n        this.teste = 'Desconectado';\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    async sessaoLogada() {}\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AAEA;AAEA;EACAA;IACAC;MACAC;QACA;MADA;IADA;EADA;AADA;AAWA;AACA;AACA;AACA;EACAC;IACA;MACAC,iBADA;MAEAC,mBAFA;MAGAC,yCAHA;MAIAC,UAJA;MAKAC;IALA;EAOA,CATA;;EAUAC;IACAC,gBAEA;;EAHA,CAVA;EAeAC;IACA;MACA;MACAC;QACAC,cADA;QAEAC;MAFA,GAIAC,IAJA,CAIAC;QACAC;QACA;QACA;QACA;MACA,CATA,EAUAC,KAVA,CAUA;QACAD;MACA,CAZA;IAaA,CAhBA;;IAiBA;MACAL;QACAC,cADA;QAEAC,iDAFA;QAGAK,sBAHA;QAIAC;UACA,kCADA;UAEA;QAFA,CAJA;QAQAjB;UACA;QADA;MARA,GAYAY,IAZA,CAYAM;QACA;UACA;YACA;YACA;;UACA;YACA;YACA;QANA;MAQA,CArBA,EAsBAH,KAtBA,CAsBA;QACAD;MACA,CAxBA;IAyBA,CA3CA;;IA4CA;MACAK;QACAL;QACA;MACA,CAHA;MAKAK;QACAL;;QACA;UACAM;QACA;MACA,CALA;IAMA,CAxDA;;IAyDA;MACAX;QACAC,cADA;QAEAC,iDAFA;QAGAM;UACA;QADA;MAHA,GAOAL,IAPA,CAOAS;QACAP;QACA;MACA,CAVA,EAWAC,KAXA,CAWA;QACAD;MACA,CAbA;IAcA,CAxEA;;IAyEA,sBAEA;;EA3EA;AAfA","names":["transportOptions","polling","extraHeaders","data","teste","tokenwhats","imagem","sessao","qrcoderen","watch","checkSession","methods","axios","method","url","then","WppToken","console","catch","responseType","headers","conectado","socket","alert","desconectado"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container grid-md\">\n    <div class=\"columns\">\n      <div class=\"column col-12\">\n        <button @click=\"getToken()\">\n          Conectar ao servidor do WhatsApp\n        </button>\n        <button @click=\"closeSession()\">\n          Fechar sessão\n        </button>\n        <button @click=\"getQrCode()\">\n          Gerar QR code\n        </button>\n        <br>\n        {{ teste }}\n        <br>\n        <button @click=\"teste2()\">\n          btn teste\n        </button>\n        <br>\n        {{ qrcoderen }}<br>\n        <img width=\"500\" height=\"500\" style=\"object-fit:contain;\" v-bind:src=\"imagem\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nconst server_socket = 'https://whatsapp-free01.wppserver.com'\n\nconst socket = io(`${server_socket}`, {\n  transportOptions: {\n    polling: {\n      extraHeaders: {\n        'Authorization': 'Bearer abc',\n      },\n    },\n  },\n});\n\n\nconst serverAPI = 'https://whatsapp-free01.wppserver.com/api'\nconst session = 'Samsung';\nconst secretkey = 'LIzBSyCmNVzwt2ErKgtnZgLZ';\nexport default {\n  data() {\n    return {\n      teste: 'Conectar',\n      tokenwhats: 'teste',\n      imagem: 'https://i.imgur.com/QmsHgri.png',\n      sessao: '',\n      qrcoderen: 'gerar2'\n    }\n  },\n  watch: {\n      checkSession(){\n\n      }\n  },\n  methods: {\n    async getToken() {\n    this.teste = 'Conectando..'\n    axios({\n      method: 'POST',\n      url: serverAPI + '/' + session + '/' + secretkey + '/generate-token',\n    })\n      .then((WppToken) => {\n        console.log(WppToken);\n        this.startSession(WppToken.data.token);\n        this.qrcoderen = WppToken.data.token;\n        this.sessao = WppToken.data.token;\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  },\n    async startSession(WppToken) {\n    axios({\n      method: 'POST',\n      url: serverAPI + '/' + session + '/start-session',\n      responseType: 'stream',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + WppToken\n      },\n      data: {\n        \"webhook\": \"https://webhook.site/7cc2944d-3967-4cea-988c-d57ea80bce5f\"\n      }\n    })\n      .then((conectado) => {\n        switch (conectado.data?.status) {\n          case 'CONNECTED':\n            this.teste = 'Conectado ao servidor'\n            break;\n          default:\n            this.teste = 'Não foi possivel conectar'\n            break;\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  },\n    async getQrCode() {\n    socket.on('qrCode', (qrCode) => {\n      console.log(qrCode);\n      this.imagem = qrCode.data;\n    });\n\n                socket.on('session-logged', (session) =>{\n        console.log(session);\n        if(session?.status == true){\n            alert('Sucesso no check');\n        }\n    })\n  },\n    async closeSession() {\n    axios({\n      method: 'POST',\n      url: serverAPI + '/' + session + '/close-session',\n      headers: {\n        'Authorization': 'Bearer ' + this.sessao\n      },\n    })\n      .then((desconectado) => {\n        console.log(desconectado);\n        this.teste = 'Desconectado';\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n  },\n    async sessaoLogada() {\n\n  }\n},\n}\n</script>"]},"metadata":{},"sourceType":"module"}